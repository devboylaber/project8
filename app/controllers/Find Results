Searching 662 files for "order"

/Users/yylaber/Documents/project8/app/assets/javascripts/orders.js.coffee:
    6  jQuery ->
    7    Stripe.setPublishableKey($('meta[name="stripe-key"]').attr('content'))
    8:   order.setupForm()
    9  
   10: order =
   11    setupForm: ->
   12:     $('#new_order').submit ->
   13        $('input[type=submit]').attr('disabled', true)
   14        if $('#card_number').length
   15:         order.processCard()
   16          false
   17        else
   ..
   24        expMonth: $('#card_month').val()
   25        expYear: $('#card_year').val()
   26:     Stripe.createToken(card, order.handleStripeResponse)
   27    
   28    handleStripeResponse: (status, response) ->
   29      if status == 200
   30:       $('#order_stripe_card_token').val(response.id)
   31:       $('#new_order')[0].submit()
   32      else
   33        $('#stripe_error').text(response.error.message)

/Users/yylaber/Documents/project8/app/assets/stylesheets/orders.css.scss:
    1: // Place all the styles related to the Orders controller here.
    2  // They will automatically be included in application.css.
    3  // You can use Sass (SCSS) here: http://sass-lang.com/

/Users/yylaber/Documents/project8/app/assets/stylesheets/products.css.scss:
    7  ****************************/
    8  .index-description {
    9: 	border: 1px black solid;
   10  	// display:inline-block;
   11      width: 80%;
   ..
   42  }
   43  .description-show-wrap {
   44: 	border: 1px solid black;
   45  }

/Users/yylaber/Documents/project8/app/assets/stylesheets/setup.css.scss:
   18  a { color: #0252aa; text-decoration: none; cursor: pointer; }
   19  a:hover { text-decoration: underline; }
   20: a img { border: 0; }
   21  
   22  ol, ul { list-style: none outside none; }
   ..
   36  #top { background: url(/images/topp-bg.png) repeat-x 0 0; height: 38px; padding: 7px 4px 0 0; }
   37  .top-nav { float: left; display: inline; padding: 10px 0 0 0; font-size: 12px; line-height: 12px; }
   38: .top-nav ul li { float: left; display: inline; padding: 0 13px; border-right: solid 1px #4bb1e5; }
   39: .top-nav ul li.nobg { border-right: 0; }
   40  .top-nav ul li.first { padding-left: 2px; }
   41  .top-nav ul li a { float: left; color: #aee4ff; }
   ..
   43  
   44  #search { float: right; display: inline; background: url(/images/search-bg.png) no-repeat 0 0; width: 120px; height: 15px; padding: 7px 35px 6px 15px; }
   45: #search input.field { line-height: 15px; background: transparent; border: 0; color: #ffffff; font-family: Georgia, serif; font-style: italic; width: 120px; }
   46  
   47  #main { padding: 0 0 0 0; background: url(/images/main-bg.png) repeat-x 0 bottom; }
   ..
   76  #main-slider .cnt .dollar { font-size: 35px; color: #1898d6; font-weight: normal; letter-spacing: -1px; }
   77  #main-slider .cnt .sub-text { vertical-align: super; font-size: 32px; }
   78: #main-slider .cnt a.btn { float: right; display: inline; background: url(/images/order-btn.png) no-repeat 0 0; width: 215px; height: 62px; margin: 31px 0 0 0; }
   79  
   80  #main-slider .nav { position: absolute; bottom: 0; left: 0; width: 100%; text-align: center; }
   ..
   86  
   87  .case { padding: 0 0 45px 0; }
   88: .case h3 { padding: 0 0 12px 15px; background: url(/images/border.png) repeat-x 0 bottom; font-style: italic; font-family: georgia, serif; }
   89  
   90: .row { padding: 20px 0 23px 0; background: url(/images/border.png) repeat-x 0 bottom; width: 980px; overflow: hidden; }
   91  .last-row { background: none; }
   92  .row .ul { width: 1017px; display: block; position: relative; }
   ..
   96  .product { font-style: italic; }
   97  .product img { padding: 0 0 10px 0; position: relative; margin-left: -2px; }
   98: .product .order { display: block; }
   99  .product .model { font-size: 16px; color: #1898d6; padding: 0 0 2px 0; }
  100  .product .number { font-family: arial, sans-serif; font-style: normal; }
  ...
  124  #footer .cols ul { position: relative; }
  125  #footer .cols .col { width: 224px; float: left; display: inline; padding: 0 25px 0 0; }
  126: #footer .col h4 { font-style: italic; font-family: georgia, serif; padding: 0 0 7px 5px; border-bottom: dotted 2px #3799cb; margin-bottom: 15px; }
  127  #footer .col p { color: #90c6e2; padding: 0 0 12px 0; }
  128  #footer .col a { color: #104662; }
  ...
  130  #footer .col a.more-link:hover { text-decoration: none; }
  131  #footer .col .field-wrapper { background: url(/images/footer-field-bg.png) no-repeat 0 0; width: 210px; height: 15px; margin-bottom: 5px; padding: 8px 10px 8px 10px; }
  132: #footer .col input.field { line-height: 15px; width: 210px; background: transparent; border: 0; font-size: 13px; color: #c0dfef; font-style: italic; }
  133: #footer .col input.submit-btn { margin-top: 2px; float: right; display: inline; background: url(/images/submit-btn.png) no-repeat 0 0; width: 122px; height: 36px; border: 0; font-size: 0; line-height: 0; text-indent: -4000px; }
  134  #footer .col input.submit-btn { cursor: pointer; }
  135  #footer .social ul li { line-height: 23px; font-size: 13px; font-weight: bold; padding: 0 0 5px 0; width: 100px; }
  ...
  150  .product-wrapper {
  151  	display: block;
  152: 	border: 1px solid black;
  153  	margin-top: 3%;
  154  	margin-left: auto;

/Users/yylaber/Documents/project8/app/controllers/application_controller.rb:
    3    # For APIs, you may want to use :null_session instead.
    4    protect_from_forgery with: :exception
    5:   helper_method :current_order
    6  
    7:   def current_order
    8:     if !session[:order_id].nil?
    9:       OrderInfo.find(session[:order_id])
   10      else
   11:       OrderInfo.new
   12      end
   13    end

/Users/yylaber/Documents/project8/app/controllers/carts_controller.rb:
    1  class CartsController < ApplicationController
    2    def show
    3:     @orders = current_order.orders
    4    end
    5  end

/Users/yylaber/Documents/project8/app/controllers/home_controller.rb:
    3    	# render 'top'
    4    	# render 'bottom'
    5:   	# def create_order
    6    	# 	@product = Product.find(params[:id])
    7    	# 	if product.save 
    8:   	# 		#@order = Order.create(params[:id])
    9:   	# 		#if @order.save
   10    	# 		redirect_to @checkout
   11    	# 	end

/Users/yylaber/Documents/project8/app/controllers/orders_controller.rb:
    1: class OrdersController < ApplicationController
    2:   # before_action :initialize_order_events
    3:   before_action :set_order, only: [:show, :edit, :update, :destroy]
    4  
    5    load_and_authorize_resource
    6:   # GET /orders
    7:   # GET /orders.json
    8    def index
    9:     @orders = Order.all
   10    end
   11  
   12:   # GET /orders/1
   13:   # GET /orders/1.json
   14    def show
   15:     @order = Order.find(params[:id])
   16    end
   17  
   18:   # GET /orders/new
   19    def new
   20:     @order = Order.new
   21    end
   22  
   23:   # GET /orders/1/edit
   24    def edit
   25    end
   26  
   27  
   28:   # POST /orders
   29:   # POST /orders.json
   30    def create
   31:     @order_info = current_order
   32:     @order = @order_info.orders.new(order_params)
   33:     @order_info.save
   34:     session[:order_id] = @order.id
   35    end
   36  
   37    def update
   38:     @order_info = current_order
   39:     @order = @order_info.orders.find(params[:id])
   40:     @order.update_attributes(order_params)
   41:     @orders = @order_info.orders
   42    end
   43  
   44    def destroy
   45:     @order_info = current_order
   46:     @order = @order_info.orders.find(params[:id])
   47:     @order.destroy
   48:     @orders = @order.orders
   49    end
   50  
   51    private
   52      # Use callbacks to share common setup or constraints between actions.
   53:     def set_order
   54:       @order = Order.find(params[:id])
   55      end
   56  
   57      # Never trust parameters from the scary internet, only allow the white list through.
   58:     def order_params
   59:       params.require(:order).permit(:product_id, :order_id, :unit_price, :quantity, :total_price, :user_id, :admin_id, :stripe_customer_token)
   60      end
   61  end

/Users/yylaber/Documents/project8/app/controllers/products_controller.rb:
   11      # @products = Product.page(params[:page])
   12      @products = Product.all
   13:     @order = current_order.orders.new
   14    end
   15    # GET /products/1

/Users/yylaber/Documents/project8/app/helpers/orders_helper.rb:
    1: module OrdersHelper
    2  end
    3  

/Users/yylaber/Documents/project8/app/models/order.rb:
    1: class Order < ActiveRecord::Base
    2      
    3      belongs_to :product
    4:     belongs_to :order_info
    5      belongs_to :user
    6      belongs_to :admin
    7: 	has_many :product_orders
    8: 	has_many :products, through: :product_orders
    9  
   10  	validates :quantity, presence: true, numericality: { only_integer: true, greater_than: 0 }
   11  	  validate :product_present
   12: 	  validate :order_info_present
   13  
   14  	  before_save :finalize
   ..
   33  	  end
   34  
   35: 	  def order_info_present
   36: 	    if order_info.nil?
   37: 	      errors.add(:order_info, "is not a valid order_info.")
   38  	    end
   39  	  end

/Users/yylaber/Documents/project8/app/models/order_info.rb:
    1: class Order < ActiveRecord::Base
    2:   belongs_to :order_status
    3:   has_many :order_items
    4:   before_create :set_order_status
    5    before_save :update_subtotal
    6  
    7    def subtotal
    8:     order_items.collect { |oi| oi.valid? ? (oi.quantity * oi.unit_price) : 0 }.sum
    9    end
   10  private
   11:   def set_order_status
   12:     self.order_status_id = 1
   13    end
   14  
   ..
   19  
   20  
   21: class OrderInfo < ActiveRecord::Base
   22:   belongs_to :order_info_status
   23:   has_many :order_info_items
   24:   before_create :set_order_info_status
   25    before_save :update_subtotal
   26  
   27    def subtotal
   28:     order_info_items.collect { |oi| oi.valid? ? (oi.quantity * oi.unit_price) : 0 }.sum
   29    end
   30  private
   31:   def set_order_info_status
   32:     self.order_info_status_id = 1
   33    end
   34  

/Users/yylaber/Documents/project8/app/models/order_status.rb:
    1: class OrderStatus < ActiveRecord::Base
    2:    class OrderStatus < ActiveRecord::Base
    3:       has_many :orders
    4     end
    5  end

/Users/yylaber/Documents/project8/app/models/product.rb:
    3      paginates_per 20
    4  
    5:     has_many :order_items
    6      belongs_to :user
    7      belongs_to :admin
    8: 	has_many :order_products
    9: 	has_many :orders, through: :order_products
   10  
   11  	has_attached_file :image, :styles => { :huge => "500x500>", :large => "400x400>", :medium => "300x300>", :small => "200x200>", :tiny => "100x100>" }, :defualt_url => "/images/:style/cool.jpg"

/Users/yylaber/Documents/project8/app/models/product_order.rb:
    1: class ProductOrder < ActiveRecord::Base
    2  	belongs_to :product
    3: 	belongs_to :order
    4  end

/Users/yylaber/Documents/project8/app/views/carts/_cart_row.html.erb:
    8      <div class="col-xs-4">
    9        
   10:       <%= form_for order, remote: true do |f| %>
   11:         <h4 class="text-right">Unit Price: <span style="color: green"><%= number_to_currency order.unit_price %></span></h4>
   12          <div class="row">
   13            <div class="col-xs-4">
   14:             <%= f.number_field :quantity, value: order.quantity.to_i, class: "form-control", min: 1 %>
   15              <%= f.hidden_field :product_id, value: product.id %>
   16            </div>
   ..
   18              <div class="btn-group">
   19                <%= f.submit "Update Quantity", class: "btn btn-primary" %>
   20:               <%= link_to "Delete", order, { data: { confirm: "Are you sure you wish to delete the product '#{order.product.name}' from your cart?" }, method: :delete, remote: true, class: "btn btn-danger" } %>
   21              </div>
   22            </div>
   23          </div>
   24:         <h4 class="text-right">Total Price: <span style="color: green"><%= number_to_currency order.total_price %></span></h4>
   25        <% end %>
   26      </div>

/Users/yylaber/Documents/project8/app/views/carts/_shopping_cart.html.erb:
    1: <% if !@order.nil? && @order.errors.any? %>
    2    <div class="alert alert-danger">
    3      <ul>
    4:     <% @order.errors.full_messages.each do |msg| %>
    5        <li><%= msg %></li>
    6      <% end %>
    .
    8    </div>
    9  <% end %>
   10: <% if @orders.size == 0 %>
   11    <p class="text-center">
   12      There are no items in your shopping cart.  Please <%= link_to "go back", root_path %> and add some items to your cart.
   13    </p>
   14  <% else %>
   15:   <% @orders.each do |order| %>
   16:     <%= render 'carts/cart_row', product: order.product, order: order, show_total: true %>
   17    <% end %>
   18  <% end %>

/Users/yylaber/Documents/project8/app/views/layouts/_cart_text.html.erb:
    1: <%= link_to "#{current_order.order.size} Items in Cart ( #{number_to_currency current_order.subtotal} )", cart_path, class: "btn btn-link" %>

/Users/yylaber/Documents/project8/app/views/orders/_form.html.erb:
    1: <%= form_for(@order) do |f| %>
    2:   <% if @order.errors.any? %>
    3      <div id="error_explanation">
    4:       <h2><%= pluralize(@order.errors.count, "error") %> prohibited this order from being saved:</h2>
    5  
    6        <ul>
    7:       <% @order.errors.full_messages.each do |message| %>
    8          <li><%= message %></li>
    9        <% end %>
   ..
   18    <%= f.text_field :email %>
   19  </div>
   20: <% if @order.stripe_card_token.present? %>
   21    Credit card has been provided.
   22  <% else %>

/Users/yylaber/Documents/project8/app/views/orders/create.js.erb:
    1: <% if @order_info.errors.any? || @order.errors.any? %>
    2  alert("not valid.")
    3  <% else %>

/Users/yylaber/Documents/project8/app/views/orders/edit.html.erb:
    1: <h1>Editing order</h1>
    2  
    3  <%= render 'form' %>
    4  
    5: <%= link_to 'Show', @order %> |
    6: <%= link_to 'Back', orders_path %>
    7  

/Users/yylaber/Documents/project8/app/views/orders/index.html.erb:
    1: <h1>Listing orders</h1>
    2  
    3  <table>
    .
   12  
   13    <tbody>
   14:     <% @orders.each do |order| %>
   15        <tr>
   16:         <td><%= order.product_id %></td>
   17:         <td><%= order.user_id %></td>
   18:         <td><%= order.admin_id %></td>
   19:         <td><%= link_to 'Show', order %></td>
   20:         <td><%= link_to 'Edit', edit_order_path(order) %></td>
   21:         <td><%= link_to 'Destroy', order, method: :delete, data: { confirm: 'Are you sure?' } %></td>
   22        </tr>
   23      <% end %>
   ..
   27  <br>
   28  
   29: <%= link_to 'New Order', new_order_path %>
   30  

/Users/yylaber/Documents/project8/app/views/orders/index.json.jbuilder:
    1: json.array!(@orders) do |order|
    2:   json.extract! order, :id, :product_id, :user_id, :admin_id
    3:   json.url order_url(order, format: :json)
    4  end
    5  

/Users/yylaber/Documents/project8/app/views/orders/new.html.erb:
    1  
    2: <!-- <h1>New order</h1> -->
    3  
    4  <%= render 'form' %>
    5  
    6: <%= link_to 'Back', orders_path %>
    7  

/Users/yylaber/Documents/project8/app/views/orders/show.html.erb:
    3  <p>
    4    <strong>Product:</strong>
    5:   <%= @order.product_id %>
    6  </p>
    7  
    8  <p>
    9    <strong>User:</strong>
   10:   <%= @order.user_id %>
   11  </p>
   12  
   13  <p>
   14    <strong>Admin:</strong>
   15:   <%= @order.admin_id %>
   16  </p>
   17  <%= @product.name %>
   18  
   19: <%= link_to 'Edit', edit_order_path(@order) %> |
   20: <%= link_to 'Back', orders_path %>
   21  

/Users/yylaber/Documents/project8/app/views/orders/show.json.jbuilder:
    1: json.extract! @order, :id, :product_id, :user_id, :admin_id, :created_at, :updated_at
    2  

/Users/yylaber/Documents/project8/app/views/products/_product_row.html.erb:
    7      <div class="col-xs-4">
    8        
    9:       <%= form_for order_item, remote: true do |f| %>
   10        <h4 class="text-right">Unit Price: <span style="color: green"><%= number_to_currency product.price %></span></h4>
   11          <div class="input-group">

/Users/yylaber/Documents/project8/app/views/products/index.html.erb:
   20                                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla mattis nisl, sit amet tincidunt.</p>
   21                                      <span class="price"><span class="dollar">$</span> 1599<span class="sub-text">.99</span></span>
   22:                                     <a href="#" class="btn notext" title="Order Now">Order Now</a>
   23                                      <div class="cl">&nbsp;</div>
   24                                  </div>
   ..
   40                                  <div class="ul">
   41                                          <% @products.each do |product| %>
   42:       <%= render "product_row", product: product, order_item: @order_item %>
   43      <% end %>
   44  
   ..
   48                                      <!--     <a href="#" class="product" title="Product 1"> -->                 
   49                                              <%= image_tag product.image.url(:small) %>
   50:                                             <span class="order model">
   51                                                  <%= product.name %>
   52                                              </span>
   53:                                             <span class="order index-description">
   54                                                  <%= product.description %>
   55                                                  <span class="number">
   ..
   57                                                  </span>
   58                                              </span>
   59:                                             <span class="order">
   60                                                  <span class="buy-text">
   61                                                      Buy Now

/Users/yylaber/Documents/project8/app/views/products/show.html.erb:
   29  	<%= link_to 'Back', products_path %>
   30  
   31: 	<%= link_to 'New Order(Checkout)', new_order_path %>
   32  <% form_for @product do |f| %>
   33  

/Users/yylaber/Documents/project8/bin/spring:
    1  #!/usr/bin/env ruby
    2  
    3: # This file loads spring without using Bundler, in order to be fast
    4  # It gets overwritten when you run the `spring binstub` command
    5  

/Users/yylaber/Documents/project8/config/initializers/devise.rb:
  136  
  137    # Options to be passed to the created cookie. For instance, you can set
  138:   # secure: true in order to force SSL only cookies.
  139    # config.rememberable_options = {}
  140  

/Users/yylaber/Documents/project8/config/routes.rb:
    3  
    4    # , path: "/admins"
    5:   resources :orders
    6  
    7    resources :products
    .
   21      resources :products, only: [:index]
   22      resource :cart, only: [:show]
   23:     resources :orders, only: [:create, :update, :destroy]
   24      root to: "products#index"
   25    end
   ..
   27  
   28    
   29:   # The priority is based upon order of creation: first created -> highest priority.
   30    # See how all your routes lay out with "rake routes".
   31  

/Users/yylaber/Documents/project8/db/migrate/20141019010307_create_orders.rb:
    1: class CreateOrders < ActiveRecord::Migration
    2    def change
    3:     create_table :orders do |t|
    4        t.references :product, index: true
    5:       t.references :order, index: true
    6        t.decimal :unit_price
    7        t.integer :quantity

/Users/yylaber/Documents/project8/db/migrate/20141030180341_create_join_table_product_order.rb:
    1: class CreateJoinTableProductOrder < ActiveRecord::Migration
    2    def change
    3:     create_join_table :products, :orders do |t|
    4:       # t.index [:product_id, :order_id]
    5:       # t.index [:order_id, :product_id]
    6      end
    7    end

/Users/yylaber/Documents/project8/db/migrate/20141030181814_add_orders_to_products.rb:
    1: class AddOrdersToProducts < ActiveRecord::Migration
    2    def change
    3:     add_column :products, :order_id, :integer
    4    end
    5  end

/Users/yylaber/Documents/project8/db/migrate/20141114001159_add_stripe_to_orders.rb:
    1: class AddStripeToOrders < ActiveRecord::Migration
    2    def change
    3:     add_column :orders, :stripe_customer_token, :string
    4    end
    5  end

/Users/yylaber/Documents/project8/db/migrate/20141114003828_add_emails_to_orders.rb:
    1: class AddEmailsToOrders < ActiveRecord::Migration
    2    def change
    3:     add_column :orders, :email, :string
    4    end
    5  end

/Users/yylaber/Documents/project8/db/migrate/20141118233612_create_order_statuses.rb:
    1: class CreateOrderStatuses < ActiveRecord::Migration
    2    def change
    3:     create_table :order_statuses do |t|
    4        t.string :name
    5  

/Users/yylaber/Documents/project8/db/migrate/20141118235031_create_order_infos.rb:
    1: class CreateOrderInfos < ActiveRecord::Migration
    2    def change
    3:     create_table :order_infos do |t|
    4        t.decimal :subtotal
    5        t.decimal :tax
    6        t.decimal :shipping
    7        t.decimal :total
    8:       t.references :order_status, index: true
    9  
   10        t.timestamps

/Users/yylaber/Documents/project8/db/schema.rb:
   14  ActiveRecord::Schema.define(version: 20141118235031) do
   15  
   16:   create_table "order_infos", force: true do |t|
   17      t.decimal  "subtotal"
   18      t.decimal  "tax"
   19      t.decimal  "shipping"
   20      t.decimal  "total"
   21:     t.integer  "order_status_id"
   22      t.datetime "created_at"
   23      t.datetime "updated_at"
   24    end
   25  
   26:   add_index "order_infos", ["order_status_id"], name: "index_order_infos_on_order_status_id"
   27  
   28:   create_table "order_statuses", force: true do |t|
   29      t.string   "name"
   30      t.datetime "created_at"
   ..
   32    end
   33  
   34:   create_table "orders", force: true do |t|
   35      t.integer  "product_id"
   36:     t.integer  "order_id"
   37      t.decimal  "unit_price"
   38      t.integer  "quantity"
   ..
   45    end
   46  
   47:   add_index "orders", ["order_id"], name: "index_orders_on_order_id"
   48:   add_index "orders", ["product_id"], name: "index_orders_on_product_id"
   49  
   50:   create_table "orders_products", id: false, force: true do |t|
   51      t.integer "product_id", null: false
   52:     t.integer "order_id",   null: false
   53    end
   54  
   ..
   65      t.integer  "image_file_size"
   66      t.datetime "image_updated_at"
   67:     t.integer  "order_id"
   68    end
   69  

/Users/yylaber/Documents/project8/db/seeds.rb:
   22  # Product.create! id: 3, name: "Carton of Strawberries", price: 1.99, active: true
   23  # puts "Sample products created"
   24: # OrderStatus.delete_all
   25: # OrderStatus.create! id: 1, name: "In Progress"
   26: # OrderStatus.create! id: 2, name: "Placed"
   27: # OrderStatus.create! id: 3, name: "Shipped"
   28: # OrderStatus.create! id: 4, name: "Cancelled"
   29  puts "Generating sample users"
   30  1.times do |n|

/Users/yylaber/Documents/project8/public/404.html:
   20  
   21    div.dialog > div {
   22:     border: 1px solid #CCC;
   23:     border-right-color: #999;
   24:     border-left-color: #999;
   25:     border-bottom-color: #BBB;
   26:     border-top: #B00100 solid 4px;
   27:     border-top-left-radius: 9px;
   28:     border-top-right-radius: 9px;
   29      background-color: white;
   30      padding: 7px 12% 0;
   ..
   42      padding: 1em;
   43      background-color: #F7F7F7;
   44:     border: 1px solid #CCC;
   45:     border-right-color: #999;
   46:     border-left-color: #999;
   47:     border-bottom-color: #999;
   48:     border-bottom-left-radius: 4px;
   49:     border-bottom-right-radius: 4px;
   50:     border-top-color: #DADADA;
   51      color: #666;
   52      box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);

/Users/yylaber/Documents/project8/public/422.html:
   20  
   21    div.dialog > div {
   22:     border: 1px solid #CCC;
   23:     border-right-color: #999;
   24:     border-left-color: #999;
   25:     border-bottom-color: #BBB;
   26:     border-top: #B00100 solid 4px;
   27:     border-top-left-radius: 9px;
   28:     border-top-right-radius: 9px;
   29      background-color: white;
   30      padding: 7px 12% 0;
   ..
   42      padding: 1em;
   43      background-color: #F7F7F7;
   44:     border: 1px solid #CCC;
   45:     border-right-color: #999;
   46:     border-left-color: #999;
   47:     border-bottom-color: #999;
   48:     border-bottom-left-radius: 4px;
   49:     border-bottom-right-radius: 4px;
   50:     border-top-color: #DADADA;
   51      color: #666;
   52      box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);

/Users/yylaber/Documents/project8/public/500.html:
   20  
   21    div.dialog > div {
   22:     border: 1px solid #CCC;
   23:     border-right-color: #999;
   24:     border-left-color: #999;
   25:     border-bottom-color: #BBB;
   26:     border-top: #B00100 solid 4px;
   27:     border-top-left-radius: 9px;
   28:     border-top-right-radius: 9px;
   29      background-color: white;
   30      padding: 7px 12% 0;
   ..
   42      padding: 1em;
   43      background-color: #F7F7F7;
   44:     border: 1px solid #CCC;
   45:     border-right-color: #999;
   46:     border-left-color: #999;
   47:     border-bottom-color: #999;
   48:     border-bottom-left-radius: 4px;
   49:     border-bottom-right-radius: 4px;
   50:     border-top-color: #DADADA;
   51      color: #666;
   52      box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);

/Users/yylaber/Documents/project8/test/controllers/orders_controller_test.rb:
    1  require 'test_helper'
    2  
    3: class OrdersControllerTest < ActionController::TestCase
    4    setup do
    5:     @order = orders(:one)
    6    end
    7  
    .
    9      get :index
   10      assert_response :success
   11:     assert_not_nil assigns(:orders)
   12    end
   13  
   ..
   17    end
   18  
   19:   test "should create order" do
   20:     assert_difference('Order.count') do
   21:       post :create, order: { admin_id: @order.admin_id, product_id: @order.product_id, user_id: @order.user_id }
   22      end
   23  
   24:     assert_redirected_to order_path(assigns(:order))
   25    end
   26  
   27:   test "should show order" do
   28:     get :show, id: @order
   29      assert_response :success
   30    end
   31  
   32    test "should get edit" do
   33:     get :edit, id: @order
   34      assert_response :success
   35    end
   36  
   37:   test "should update order" do
   38:     patch :update, id: @order, order: { admin_id: @order.admin_id, product_id: @order.product_id, user_id: @order.user_id }
   39:     assert_redirected_to order_path(assigns(:order))
   40    end
   41  
   42:   test "should destroy order" do
   43:     assert_difference('Order.count', -1) do
   44:       delete :destroy, id: @order
   45      end
   46  
   47:     assert_redirected_to orders_path
   48    end
   49  end

/Users/yylaber/Documents/project8/test/fixtures/order_infos.yml:
    6    shipping: 9.99
    7    total: 9.99
    8:   order_status_id: 
    9  
   10  two:
   ..
   13    shipping: 9.99
   14    total: 9.99
   15:   order_status_id: 
   16  

/Users/yylaber/Documents/project8/test/helpers/orders_helper_test.rb:
    1  require 'test_helper'
    2  
    3: class OrdersHelperTest < ActionView::TestCase
    4  end
    5  

/Users/yylaber/Documents/project8/test/models/order_info_test.rb:
    1  require 'test_helper'
    2  
    3: class OrderInfoTest < ActiveSupport::TestCase
    4    # test "the truth" do
    5    #   assert true

/Users/yylaber/Documents/project8/test/models/order_status_test.rb:
    1  require 'test_helper'
    2  
    3: class OrderStatusTest < ActiveSupport::TestCase
    4    # test "the truth" do
    5    #   assert true

/Users/yylaber/Documents/project8/test/models/order_test.rb:
    1  require 'test_helper'
    2  
    3: class OrderTest < ActiveSupport::TestCase
    4    # test "the truth" do
    5    #   assert true

/Users/yylaber/Documents/project8/test/test_helper.rb:
    4  
    5  class ActiveSupport::TestCase
    6:   # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
    7    fixtures :all
    8  

309 matches across 51 files


Searching 662 files for "current_order"

/Users/yylaber/Documents/project8/app/controllers/application_controller.rb:
    3    # For APIs, you may want to use :null_session instead.
    4    protect_from_forgery with: :exception
    5:   helper_method :current_order
    6  
    7:   def current_order
    8      if !session[:order_id].nil?
    9        OrderInfo.find(session[:order_id])

/Users/yylaber/Documents/project8/app/controllers/carts_controller.rb:
    1  class CartsController < ApplicationController
    2    def show
    3:     @orders = current_order.orders
    4    end
    5  end

/Users/yylaber/Documents/project8/app/controllers/orders_controller.rb:
   29    # POST /orders.json
   30    def create
   31:     @order_info = current_order
   32      @order = @order_info.orders.new(order_params)
   33      @order_info.save
   ..
   36  
   37    def update
   38:     @order_info = current_order
   39      @order = @order_info.orders.find(params[:id])
   40      @order.update_attributes(order_params)
   ..
   43  
   44    def destroy
   45:     @order_info = current_order
   46      @order = @order_info.orders.find(params[:id])
   47      @order.destroy

/Users/yylaber/Documents/project8/app/controllers/products_controller.rb:
   11      # @products = Product.page(params[:page])
   12      @products = Product.all
   13:     @order = current_order.orders.new
   14    end
   15    # GET /products/1

/Users/yylaber/Documents/project8/app/views/layouts/_cart_text.html.erb:
    1: <%= link_to "#{current_order.order.size} Items in Cart ( #{number_to_currency current_order.subtotal} )", cart_path, class: "btn btn-link" %>

9 matches across 5 files
